pipeline {
    agent any

    stages {

        stage('Waiting for Deployment') {
            steps {
                // Introduce a delay to wait for deployment to complete
                sleep time: 2, unit: 'MINUTES'
            }
        }

        stage('Run API Tests') {
            steps {
                sh 'newman run https://api.postman.com/collections/9209211-43042901-cf03-4f65-9b70-aeec2dd0a192?access_key=PMAT-01HTBFFT5QTGWZ895JRH8GKZ08'
            }
        }
    }

    post {
        always {
            script {
                def pipelineStatus = currentBuild.currentResult == null ? 'RUNNING' : currentBuild.currentResult
                def color = ''
                switch (pipelineStatus) {
                    case 'SUCCESS':
                        color = '#36a64f' // Green
                        break
                    case 'FAILURE':
                        color = '#ff0000' // Red
                        break
                    case 'ABORTED':
                        color = '#bdbdbd' // Grey
                        break
                    default:
                        color = '#ffbf00' // Yellow
                        break
                }

                def slackMessage = """
                    *API Testing Status Update*
                    *Job Name:* ${env.JOB_NAME}
                    *Build Number:* ${env.BUILD_NUMBER}
                    *Build URL:* ${env.BUILD_URL}
                    *Status:* ${pipelineStatus}
                """

                def attachment = [
                    color: color,
                    fallback: "API Testing Status Update - ${env.JOB_NAME} - ${pipelineStatus}",
                    text: slackMessage
                ]

                slackSend channel: 'fx-prod' , attachments: [attachment], tokenCredentialId: 'slack-auth'
            }
        }
    }
}